<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Visualizer.Resources">


    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border CornerRadius="5" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Path 
                    Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 Z" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Fill="{StaticResource MainBorderColor}"/>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="FontWeight" Value="UltraBold"/>
        <Setter Property="Background" Value="{DynamicResource MainBackGroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MainBorderColor}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <ToggleButton
                        Grid.ColumnSpan="2"
                        ClickMode="Press"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Template="{StaticResource ComboBoxToggleButtonTemplate}"
                        IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                        <ContentPresenter 
                        Margin="5, 3, 0, 3"
                        IsHitTestVisible="False"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                              
                        Content="{TemplateBinding ComboBox.SelectionBoxItem}" >
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding}" TextWrapping="Wrap"  />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                        <Popup 
                            AllowsTransparency="True" PopupAnimation="Slide" 
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}">
                            <Grid MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border
                                        CornerRadius="{Binding Source={StaticResource RadiusInNum}}"
                                        Background="{DynamicResource MainBackGroundColor}"
                                        BorderBrush="{DynamicResource MainBorderColor}" 
                                        BorderThickness="{Binding Source={StaticResource BorderThinkessInNum}}"/>
                                <ScrollViewer Margin="0,1,1,1">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ColorForPopup}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}"
       TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Deactivate">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ForegroundColorInColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Activate">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ActivatedForegroundColorInColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="GetFocus">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource GotFocusForegroundColorInColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true"
                Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter x:Name="contentPresenter">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" 
                                        VerticalAlignment="Center" 
                                        TextAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Text="{Binding}" 
                                        TextWrapping="Wrap"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard Storyboard="{StaticResource Deactivate}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard Storyboard="{StaticResource Activate}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource GetFocus}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>